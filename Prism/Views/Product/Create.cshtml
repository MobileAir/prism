@model Prism.Models.Product

@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">
    
    function SetSellingPrices() {
        
        var cost = document.getElementById("CostPrice").value;
        var number = (10 / 100) * cost;
        var sellingPrice = Math.round(parseFloat(cost) + parseFloat(number));
        document.getElementById("SellingPrice").value = sellingPrice;
        document.getElementById("SupplyPrice").value = sellingPrice; //make supply price equal to selling price by default
    };

    function SetSupplyPrice() {
        var price = document.getElementById("SellingPrice").value;
        document.getElementById("SupplyPrice").value = price;
    }
</script>

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TargetGender, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TargetGender, new SelectList(new List<Object> { new { value = 'F', text = "Female" }, new { value = 'M', text = "Male" }, new { value = "Both", text = "Both" } }, "value", "text", 1), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TargetGender)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TargetWeather, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TargetWeather, new SelectList(new List<Object> { new { value = "Summer", text = "Summer" }, new { value = "Rain", text = "Rain" }, new { value = "Harmattan", text = "Harmattan" }, new { value = "All", text = "All" } }, "value", "text", 0), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TargetWeather)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CostPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                

                @Html.TextBoxFor(model => model.CostPrice, new { @onchange = "SetSellingPrices()", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CostPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellingPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SellingPrice, new { @onchange="SetSupplyPrice()", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SellingPrice)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.SupplyPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SupplyPrice, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplyPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentID, "Department", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DepartmentID, (IEnumerable<SelectListItem>)ViewBag.DepartmentID, new { @class = "form-control" })
                
                @Html.ValidationMessageFor(model => model.DepartmentID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyID, "Company", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CompanyID, (IEnumerable<SelectListItem>)ViewBag.CompanyID, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyID)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="submit" class="btn btn-success" value="Create">
                    <i class="glyphicon glyphicon-plus"></i>
                    Create
                </button>
            </div>
        </div>       
        
    </div>
}

<div>
    <button id="submit" class="btn btn-primary" value="Back to List" onclick="location.href='@Url.Action("Index")'">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Back to List
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
